/*
Copyright 2021 The Skupper Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/skupperproject/skupper/pkg/apis/skupper/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ProvidedServiceLister helps list ProvidedServices.
type ProvidedServiceLister interface {
	// List lists all ProvidedServices in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ProvidedService, err error)
	// ProvidedServices returns an object that can list and get ProvidedServices.
	ProvidedServices(namespace string) ProvidedServiceNamespaceLister
	ProvidedServiceListerExpansion
}

// providedServiceLister implements the ProvidedServiceLister interface.
type providedServiceLister struct {
	indexer cache.Indexer
}

// NewProvidedServiceLister returns a new ProvidedServiceLister.
func NewProvidedServiceLister(indexer cache.Indexer) ProvidedServiceLister {
	return &providedServiceLister{indexer: indexer}
}

// List lists all ProvidedServices in the indexer.
func (s *providedServiceLister) List(selector labels.Selector) (ret []*v1alpha1.ProvidedService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ProvidedService))
	})
	return ret, err
}

// ProvidedServices returns an object that can list and get ProvidedServices.
func (s *providedServiceLister) ProvidedServices(namespace string) ProvidedServiceNamespaceLister {
	return providedServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ProvidedServiceNamespaceLister helps list and get ProvidedServices.
type ProvidedServiceNamespaceLister interface {
	// List lists all ProvidedServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ProvidedService, err error)
	// Get retrieves the ProvidedService from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ProvidedService, error)
	ProvidedServiceNamespaceListerExpansion
}

// providedServiceNamespaceLister implements the ProvidedServiceNamespaceLister
// interface.
type providedServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ProvidedServices in the indexer for a given namespace.
func (s providedServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ProvidedService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ProvidedService))
	})
	return ret, err
}

// Get retrieves the ProvidedService from the indexer for a given namespace and name.
func (s providedServiceNamespaceLister) Get(name string) (*v1alpha1.ProvidedService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("providedservice"), name)
	}
	return obj.(*v1alpha1.ProvidedService), nil
}
